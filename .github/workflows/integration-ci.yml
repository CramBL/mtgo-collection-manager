name: integraton-ci

on:
  pull_request:
  release:
    types: [published]
  push:
    tags:
      - master
    branches:
      - develop
      - master

env:
  VERBOSE: 1

jobs:
  Test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            compiler: gcc-13
            generator: "Ninja Multi-Config"
            enable_ipo: On
            packaging_maintainer_mode: OFF
            build_shared: OFF

          - os: macos-12
            compiler: llvm-15.0.3
            generator: "Ninja Multi-Config"
            enable_ipo: Off
            packaging_maintainer_mode: OFF
            build_shared: OFF

          - os: windows-2022
            compiler: msvc
            generator: "Visual Studio 17 2022"
            enable_ipo: On

    name: Test
    steps:
      - uses: actions/checkout@v3
      - uses: moonrepo/setup-rust@v1
      - uses: aminya/setup-cpp@v1
        with:
          vcvarsall: ${{ contains(matrix.os, 'windows' )}}
          compiler: ${{ matrix.compiler }}
          cmake: true
          ninja: true
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: 📝 Build & Run tests - Unix 🐧🍎
        if: runner.os != 'Windows'
        run: |
          make build-integration MTGOPARSER_IPO=${{matrix.enable_ipo }} BUILD_MODE=Release
          make test

      - name: 📝 Build & Run tests - Windows 💻
        if: runner.os == 'Windows'
        run: |
          .\wmake.ps1 build-integration -MTGOPARSER_IPO ${{matrix.enable_ipo }} -MTGOPARSER_GENERATOR "${{matrix.generator}}" -BUILD_MODE Release
          .\wmake.ps1 test

      - name: 📦 Pack - Windows 💻
        if: runner.os == 'Windows'
        run: |
          mkdir -p bin
          cp mtgogetter/mtgogetter.exe bin
          cp mtgoparser/build/src/mtgo_preprocessor/Release/mtgo_preprocesser.exe bin
          cp mtgogui/target/release/mtgogui.exe mtgo-collection-manager.exe
          gzip -r ${{ matrix.os }}-${{ matrix.compiler }}-mtgo-cm.zip mtgo-collection-manager.exe bin
      - uses: actions/upload-artifact@v3
        with:
          name: packaged-mtgoparser
          path: ${{ matrix.os }}-${{ matrix.compiler }}-mtgo-cm.zip
          retention-days: 14

      - name: 📦 Pack - Unix 🐧🍎
        if: runner.os != 'Windows'
        run: |
          mkdir -p bin
          cp mtgogetter/mtgogetter bin
          cp mtgoparser/build/src/mtgo_preprocessor/Release/mtgo_preprocesser bin
          cp mtgogui/target/release/mtgogui mtgo-collection-manager
          gzip -r ${{ matrix.os }}-${{ matrix.compiler }}-mtgo-cm.zip mtgo-collection-manager bin
      - uses: actions/upload-artifact@v3
        with:
          name: packaged-mtgoparser
          path: ${{ matrix.os }}-${{ matrix.compiler }}-mtgo-cm.zip
          retention-days: 14
