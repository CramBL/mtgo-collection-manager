name: CI

on:
  pull_request:
  push:
    tags: [master]
    branches: [master]

env:
  VERBOSE: 1
  RUST_BACKTRACE: 1
  JUST_VERBOSE: 1

defaults:
  run:
    shell: bash

jobs:
  Native-Test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false

      matrix:
        include:
          - os: ubuntu-22.04
            compiler: llvm-17.0.2

          - os: macos-13
            compiler: llvm-15.0.3

          - os: windows-2022
            compiler: msvc
            generator: "Visual Studio 17 2022"

    name: ⚒️ Build & Test 📝
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v2
      - uses: moonrepo/setup-rust@v1
        with:
          components: clippy, rustfmt
          bins: cargo-audit

      - name: ⚙️ Setup C++ Tools
        if: runner.os == 'macos'
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          cmake: true
          ninja: true

      - name: ⚙️ Install development headers - Linux 🐧
        if: runner.os == 'Linux'
        run: |
          cd build-util/deps && ./install-debian-deps.sh
          gcc --version || clang --version
          cmake --version
          ninja --version

      - name: Print tool versions
        run: just env

      - name: 🍄 Check & Lint 🩺
        run: just ci-lint

      - name: ⚒️ Build - 🍎🐧
        if: runner.os != 'windows'
        run: cargo build

      - name: ⚒️ Build - 💻
        if: runner.os == 'windows'
        continue-on-error: true
        run: cargo build --features bundled

      - name: 📝 Test - 🍎🐧💻
        run: cargo test

  Container-Build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

      matrix:
        build-profile: [dev, release]
        target: [ubuntu, windows]

    name: ${{ matrix.target }} ${{ matrix.build-profile }}
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v2

      - name: Print tool versions
        run: just env

      - name: ⚙️ Build devcontainer
        run: just build-devcontainer

      - name: ⚒️ Build - 💻🐧
        if: ${{ matrix.target == 'windows' }}
        run: just cross-compile-windows-xwin ${{ matrix.build-profile }}

      - name: ⚒️ Build -
        if: ${{ matrix.target != 'windows' }}
        run: just build --profile=${{ matrix.build-profile }}

      - name: 📦 Pack/Archive
        run: just archive-bin "${{ matrix.target }}-${{ matrix.build-profile }}"

      - name: 📩 Upload - Linux-windows cross 💻🐧
        uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.target }}-${{ matrix.build-profile }}"
          path: "${{ matrix.target }}-${{ matrix.build-profile }}.zip"
          retention-days: 14
