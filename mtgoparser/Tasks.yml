version: '3'

tasks:
  # These tasks should be run from the root of the project
  # E.g. `task mtgoparser:build`

   print-build-vars:
      aliases: [bvars, print-bvars]
      desc: Print build configuration variables
      silent: true
      cmds:
         - echo "BUILD_MODE=${BUILD_MODE}"
         - echo "MTGOPARSER_BUILD_MODE=${MTGOPARSER_BUILD_MODE}"
         - echo "MTGOPARSER_BUILD_TESTS=${MTGOPARSER_BUILD_TESTS}"
         - echo "MTGOPARSER_GENERATOR=${MTGOPARSER_GENERATOR}"
         - echo "MTGOPARSER_IPO={{.MTGOPARSER_IPO}}"
         - echo "MTGOPARSER_BUILD_MODE=${MTGOPARSER_BUILD_MODE}"
         - echo "MTGOPARSER_ENABLE_COV=${MTGOPARSER_ENABLE_COV}"
         - echo "MTGOPARSER_EXCLUDE_BOOST_LIBS={{.MTGOPARSER_EXCLUDE_BOOST_LIBS}}"
         - echo "MTGOPARSER_LINKER=${MTGOPARSER_LINKER}"
         - echo "MTGOPARSER_USER_LINKER={{.MTGOPARSER_USER_LINKER}}"
      requires:
         vars: [BUILD_MODE,
               MTGOPARSER_GENERATOR,
               MTGOPARSER_IPO,
               MTGOPARSER_BUILD_MODE,
               MTGOPARSER_ENABLE_COV,
               MTGOPARSER_EXCLUDE_BOOST_LIBS,
               MTGOPARSER_LINKER,
               MTGOPARSER_USER_LINKER]

   build:
      aliases: [b]
      desc: Build MTGO Parser
      summary: |
         This task builds MTGO Parser with the default build configuration, including warnings as errors and static analysis.
      dir: mtgoparser
      deps: [print-build-vars]
      cmds:
         - task: generate-buildsystem
         - task: compile

   build-for-integration:
      aliases: [b-integration, b-int]
      desc: Build MTGO Parser for integration with the rest of the MTGO Collection Manager app
      summary: |
         This task builds MTGO Parser for integration with the rest of the MTGO Collection Manager app.

         The task is a convenience for building faster.

         It turns off warnings as errors and some static analysis in the interest of building faster. When using this
         build configuration, it is assumed that more thorough testing has been done on MTGO Parser in a more rigirous build.
      dir: mtgoparser
      deps: [print-build-vars]
      cmds:
         - task: generate-buildsystem-for-integration
         - task: compile

   generate-buildsystem:
      desc: Generate MTGO Parser build system
      internal: true
      dir: mtgoparser
      cmds:
         - echo "==> Generating MTGO Parser buildsystem..."
         - task: generate-buildsystem-template
           vars: {
                  GENERATOR: "${MTGOPARSER_GENERATOR}",
                  BUILD_MODE: Release,
                  IPO: "{{.MTGOPARSER_IPO}}",
                  PACKAGING_MAINTAINER_MODE: "${MTGOPARSER_PACKAGING_MAINTAINER_MODE}",
                  BUILD_TESTS: "${MTGOPARSER_BUILD_TESTS}",
                  ENABLE_COV: "${MTGOPARSER_ENABLE_COV}",
                  WARNINGS_AS_ERRORS: ON,
                  ENABLE_CLANG_TIDY: ON,
                  ENABLE_CPPCHECK: ON,
                  LINKER: "${MTGOPARSER_LINKER}",
                  USER_LINKER: "${MTGOPARSER_USER_LINKER}"
               }
         - echo "=== Done generating MTGO Parser build system ==="

   generate-buildsystem-for-integration:
      desc: Generate MTGO Parser build system
      internal: true
      dir: mtgoparser
      cmds:
         - echo "==> Generating MTGO Parser buildsystem for integration..."
         - task: generate-buildsystem-template
           vars: {
                  GENERATOR: Ninja Multi-Config,
                  BUILD_MODE: Release,
                  IPO: "{{.MTGOPARSER_IPO}}",
                  PACKAGING_MAINTAINER_MODE: OFF,
                  BUILD_TESTS: "${MTGOPARSER_BUILD_TESTS}",
                  ENABLE_COV: OFF,
                  WARNINGS_AS_ERRORS: OFF,
                  ENABLE_CLANG_TIDY: OFF,
                  ENABLE_CPPCHECK: OFF,
                  LINKER: "${MTGOPARSER_LINKER}",
                  USER_LINKER: "${MTGOPARSER_USER_LINKER}"
               }
         - echo "=== Done generating MTGO Parser build system for integration ==="
      requires:
         vars: [MTGOPARSER_GENERATOR,
               MTGOPARSER_IPO,
               MTGOPARSER_BUILD_MODE,
               MTGOPARSER_ENABLE_COV,
               MTGOPARSER_EXCLUDE_BOOST_LIBS,
               MTGOPARSER_LINKER,
               MTGOPARSER_USER_LINKER]

   generate-buildsystem-template:
      desc: Template for setting parameters for generating the MTGO Parser build system
      internal: true
      dir: mtgoparser
      vars:
         GENERATOR:          '{{default "Ninja Multi-Config" .GENERATOR}}'
         BUILD_MODE:         '{{default "Release" .BUILD_MODE}}'
         IPO:                '{{default "ON" .IPO}}'
         PACKAGING_MAINTAINER_MODE: '{{default "OFF" .PACKAGING_MAINTAINER_MODE}}'
         BUILD_TESTS:        '{{default "OFF" .BUILD_TESTS}}'
         ENABLE_COV:         '{{default "OFF" .ENABLE_COV}}'
         WARNINGS_AS_ERRORS: '{{default "ON" .WARNINGS_AS_ERRORS}}'
         ENABLE_CLANG_TIDY:  '{{default "ON" .ENABLE_CLANG_TIDY}}'
         ENABLE_CPPCHECK:    '{{default "ON" .ENABLE_CPPCHECK}}'
         LINKER:             '{{default "mold" .LINKER}}'
         USER_LINKER:        '{{default "OFF" .USER_LINKER}}'

      cmds:
         - cmake -S .
                 -B build
                 -G "{{.GENERATOR}}"
                 -DCMAKE_BUILD_TYPE:STRING={{.BUILD_MODE}}
                 -Dmtgoparser_ENABLE_IPO={{.IPO}}
                 -Dmtgoparser_PACKAGING_MAINTAINER_MODE:BOOL={{.PACKAGING_MAINTAINER_MODE}}
                 -DBUILD_TESTING={{.BUILD_TESTS}}
                 -Dmtgoparser_ENABLE_COVERAGE:BOOL={{.ENABLE_COV}}
                 -Dmtgoparser_WARNINGS_AS_ERRORS:BOOL={{.WARNINGS_AS_ERRORS}}
                 -Dmtgoparser_ENABLE_CLANG_TIDY:BOOL={{.ENABLE_CLANG_TIDY}}
                 -Dmtgoparser_ENABLE_CPPCHECK:BOOL={{.ENABLE_CPPCHECK}}
                 -DBOOST_EXCLUDE_LIBRARIES="{{.MTGOPARSER_EXCLUDE_BOOST_LIBS}}"
                 -DUSER_LINKER_OPTION={{.LINKER}}
                 -Dmtgoparser_ENABLE_USER_LINKER:BOOL={{.USER_LINKER}}
      requires:
         vars: [GENERATOR,
               BUILD_MODE,
               IPO,
               PACKAGING_MAINTAINER_MODE,
               BUILD_TESTS,
               ENABLE_COV,
               WARNINGS_AS_ERRORS,
               ENABLE_CLANG_TIDY,
               ENABLE_CPPCHECK,
               LINKER,
               USER_LINKER]


   compile:
      desc: Compile MTGO Parser
      internal: true
      dir: mtgoparser
      cmds:
         - echo "==> Compiling MTGO Parser..."
         - cmake --build build --config ${MTGOPARSER_BUILD_MODE}
         - echo "=== Done compiling MTGO Parser ==="
      requires:
         vars: [MTGOPARSER_BUILD_MODE]

   test:
      aliases: [t]
      desc: Runs unit/module tests for MTGO Parser
      silent: true
      dir: mtgoparser/build
      cmds:
         - echo "==> Testing MTGO Parser..."
         - ctest --output-on-failure
         - echo "=== Done testing MTGO Parser ==="


   benchmark:
      aliases: [bench]
      desc: Run MTGO Parser benchmark suite
      silent: true
      dir: mtgoparser/build/test
      cmds:
         - echo "==> Benchmarking MTGO Parser..."
         - task: benchmark-xml-parse
         - echo "=== Done benchmarking MTGO Parser ==="

   benchmark-xml-parse:
      desc: Run MTGO Parser benchmark suite for XML parsing
      silent: true
      dir: mtgoparser/build/test
      cmds:
         - echo "==> Benchmarking MTGO Parser XML parsing..."
         - ./${MTGOPARSER_BUILD_MODE}/benchmark_xml_parse [.]
         - echo "=== Done benchmarking MTGO Parser XML parsing ==="

   clean:
      aliases: [c]
      desc: Clean MTGO Parser build artifacts
      dir: mtgoparser
      cmds:
         - echo "==> Cleaning MTGO Parser build artifacts..."
         - cmd: rm -rf build
           platforms: [linux, darwin]
         - cmd: pwsh -Command "Remove-Item build -Recurse -Force"
           platforms: [windows]
         - echo "=== Done cleaning MTGO Parser build artifacts ==="